# Generated by Django 5.0.4 on 2024-05-22 06:24

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django_ulid.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('post_date', models.DateField(verbose_name='投稿日')),
                ('article', models.TextField()),
                ('is_draft', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='FinancialInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('short_name', models.CharField(max_length=24)),
                ('JBAcode', models.CharField(max_length=6)),
                ('bank_category', models.CharField(choices=[('都市銀行', '都市銀行'), ('地方銀行', '地方銀行'), ('第二地銀', '第二地銀'), ('信用金庫', '信用金庫'), ('信用組合', '信用組合'), ('信金中央金庫', '信金中央金庫'), ('政府関係機関', '政府関係機関'), ('商工組合中央金庫', '商工組合中央金庫'), ('全国信用協同組合連合会', '全国信用協同組合連合会'), ('労働金庫連合会', '労働金庫連合会'), ('農林中央金庫', '農林中央金庫'), ('信託銀行', '信託銀行'), ('その他金融機関', 'その他金融機関')], default='地方銀行', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='メールアドレス')),
                ('username', models.CharField(error_messages={'unique': 'このユーザー名は既に使用されています。'}, help_text='150文字以下のユーザー名を入力してください。', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='ユーザー名')),
                ('is_active', models.BooleanField(default=True, help_text='ユーザーがアクティブかどうかを指定します。', verbose_name='アクティブ')),
                ('is_financial_consultant', models.BooleanField(default=False)),
                ('is_company_user', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'ユーザー',
                'verbose_name_plural': 'ユーザー',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', django_ulid.models.ULIDField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('fiscal_month', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='決算月')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='companies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Debt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('principal', models.IntegerField()),
                ('issue_date', models.DateField(verbose_name='実行日')),
                ('start_date', models.DateField(verbose_name='返済開始日')),
                ('interest_rate', models.DecimalField(decimal_places=2, max_digits=4, verbose_name='利息')),
                ('monthly_repayment', models.IntegerField(verbose_name='月返済額')),
                ('adjusted_amount_first', models.IntegerField(verbose_name='初月調整額')),
                ('adjusted_amount_last', models.IntegerField(verbose_name='最終月調整額')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoreai.company')),
                ('financial_institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoreai.financialinstitution')),
            ],
        ),
        migrations.CreateModel(
            name='Firm',
            fields=[
                ('id', django_ulid.models.ULIDField(editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='firms', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingMinutes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('notes', models.TextField()),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='scoreai.company')),
                ('consultant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
